"""
Author: Miquel Anglada Girotto
Contact: miquelangladagirotto [at] gmail [dot] com
Last Update: 2021-01-12

Workflow purpose
--------------
Workflow to analyze putative associations between exons and cancer at single-exon level.


Outline
-------
        
"""

import os
import pandas as pd

# variables
ROOT = os.path.dirname(os.path.dirname(os.getcwd()))
RAW_DIR = os.path.join(ROOT,'data','raw')
PREP_DIR = os.path.join(ROOT,'data','prep')
RESULTS_DIR = os.path.join(ROOT,'results','splicing_dependency_validation')
PANGOLIN_DIR = os.path.join(os.path.dirname(os.path.dirname(ROOT)),'repositories','Pangolin')

EVENTS_OI = [
    "HsaEX0006970",
    "HsaEX0008092",
    "HsaEX0020455",
    "HsaEX0022946",
    "HsaEX0026116",
    "HsaEX0034998",
    "HsaEX0043609",
    "HsaEX0044398",
    "HsaEX0044468",
    "HsaEX0049558",
    "HsaEX0050345",
    "HsaEX0052877",
    "HsaEX0056284",
    "HsaEX0066096",
    "HsaEX0070392",
    "HsaEX0071941",
    "HsaEX0030476" # not selected cancer-driver exon (just control)
]

event_info = pd.read_table(os.path.join(RAW_DIR,"VastDB","EVENT_INFO-hg38_noseqs.tsv"))
EVENTS_INFO = {
    event: {
        "event_chr": event_info.loc[event_info["EVENT"]==event,"COORD_o"].values[0].split(":")[0],
        "event_start": event_info.loc[event_info["EVENT"]==event,"COORD_o"].values[0].split(":")[1].split("-")[0],
        "event_end": event_info.loc[event_info["EVENT"]==event,"COORD_o"].values[0].split(":")[1].split("-")[1],
        "event_strand": event_info.loc[event_info["EVENT"]==event,"REF_CO"].values[0].split(":")[-1]
    }
    for event in EVENTS_OI
}

##### RULES #####
rule all:
    input:
        # fit gene dependencies and get empirical distributions of coefficients
        expand(os.path.join(RESULTS_DIR,"files","pangolin_splicing_enhancers","{event}"), event=EVENTS_OI)
    
    
rule get_splicing_enhancers:
    input:
        reference = os.path.join(RAW_DIR,"GENCODE","GRCh38.p13.genome.fa.gz"),
        pangolin_dir = PANGOLIN_DIR
    output:
        directory(os.path.join(RESULTS_DIR,"files","pangolin_splicing_enhancers","{event}"))
    params:
        event_name = "{event}",
        event_chr = lambda wildcards: EVENTS_INFO[wildcards.event]["event_chr"],
        event_start = lambda wildcards: EVENTS_INFO[wildcards.event]["event_start"],
        event_end = lambda wildcards: EVENTS_INFO[wildcards.event]["event_end"],
        event_strand = lambda wildcards: EVENTS_INFO[wildcards.event]["event_strand"],
        margin_out = 250,
        method = "deletion",
        size = 10
    threads: 1
    resources:
        runtime = 3600*6, # 6h
        memory = 10 # GB
    shell:
        """
        nice python scripts/explore_splicing_enhancers.py \
                --event_name={params.event_name} \
                --event_chr={params.event_chr} \
                --event_start={params.event_start} \
                --event_end={params.event_end} \
                --event_strand={params.event_strand} \
                --margin_out={params.margin_out} \
                --size={params.size} \
                --method={params.method} \
                --reference_file={input.reference} \
                --pangolin_dir={input.pangolin_dir} \
                --output_dir={output}
        """
        
        
        