import os

# variables
ROOT = os.path.dirname(os.path.dirname(os.getcwd()))
RAW_DIR = os.path.join(ROOT,'data','raw')
PREP_DIR = os.path.join(ROOT,'data','prep')
RESULTS_DIR = os.path.join(ROOT,'results','eda_data')

EVENT_TYPES = ['EX','ALTA','ALTD']

CCLE_MATRICES = {
    'psi-EX': os.path.join(PREP_DIR,'exon_psi_imputed','CCLE-EX.tsv.gz'),
    'psi-ALTA': os.path.join(PREP_DIR,'exon_psi_imputed','CCLE-ALTA.tsv.gz'),
    'psi-ALTD': os.path.join(PREP_DIR,'exon_psi_imputed','CCLE-ALTD.tsv.gz'),
    'genexpr': os.path.join(PREP_DIR,'genexpr','CCLE.tsv.gz'),
    'demeter2': os.path.join(PREP_DIR,'demeter2_imputed','CCLE.tsv.gz')
}


##### RULES #####
rule all:
    input:
        # do PCA, UMAP and leiden clustering of cell lines
        expand(os.path.join(RESULTS_DIR,'files','decompose_and_cluster','{dataset}.tsv.gz'), dataset=CCLE_MATRICES.keys()),
        
        # make figures
        os.path.join(RESULTS_DIR,'figures','eda')


rule decompose_matrices:
    input:
        lambda wildcards: CCLE_MATRICES[wildcards.dataset]
    output:
        os.path.join(RESULTS_DIR,'files','decompose_and_cluster','{dataset}.tsv.gz')
    shell:
        """
        python scripts/decompose_and_cluster.py \
                    --matrix_file={input} \
                    --output_file={output} 
        """


rule figures_eda_data:
    input:
        demeter = os.path.join(RESULTS_DIR,'files','decompose_and_cluster','demeter2.tsv.gz'),
        genexpr = os.path.join(RESULTS_DIR,'files','decompose_and_cluster','genexpr.tsv.gz'),
        psi_EX = os.path.join(RESULTS_DIR,'files','decompose_and_cluster','psi-EX.tsv.gz'),
        metadata = os.path.join(PREP_DIR,'metadata','CCLE.tsv'),
        indices = os.path.join(PREP_DIR,'transcriptome_indices','CCLE.tsv.gz')
    output:
        directory(os.path.join(RESULTS_DIR,'figures','eda'))
    shell:
        """
        Rscript scripts/figures_eda_data.R \
                    --demeter_file={input.demeter} \
                    --genexpr_file={input.genexpr} \
                    --psi_EX_file={input.psi_EX} \
                    --metadata_file={input.metadata} \
                    --indices_file={input.indices} \
                    --figs_dir={output}
        """