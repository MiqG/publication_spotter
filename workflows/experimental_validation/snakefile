"""
Author: Miquel Anglada Girotto
Contact: miquelangladagirotto [at] gmail [dot] com

Workflow purpose
--------------
Workflow to analyze putative associations between exons and cancer at single-exon level.


Outline
-------
- Spl. Dep. validation
    1. compute inhouse splicing dependencies
    2. identify targets with therapeutic potential in inhouse cancer cell lines
    3. validate selected targets experimentally
"""

import os

# variables
ROOT = os.path.dirname(os.path.dirname(os.getcwd()))
SUPPORT_DIR = os.path.join(ROOT,"support")
SRC_DIR = os.path.join(ROOT,"src")
RAW_DIR = os.path.join(ROOT,'data','raw')
PREP_DIR = os.path.join(ROOT,'data','prep')
RESULTS_DIR = os.path.join(ROOT,'results','experimental_validation')
TS_DIR = os.path.join(os.path.dirname(os.path.dirname(ROOT)),'repositories','target_spotter')
CCLE_DIR = os.path.join(ROOT,"results","model_splicing_dependency")
TCGA_DIR = os.path.join(ROOT,'results','streamlined_therapy_dev')

EVENT_TYPES = ["EX"]

##### RULES #####
rule all:
    input:
        # compute splicing dependencies inhouse dataset
        expand(os.path.join(RESULTS_DIR,'files','splicing_dependency-{event_type}'), event_type=EVENT_TYPES),
        
        # figures
        os.path.join(RESULTS_DIR,'figures','selection_exons_to_validate'),
        os.path.join(RESULTS_DIR,"figures","validation")

        
rule compute_splicing_dependency:
    input:
        psi = os.path.join(PREP_DIR,"event_psi","inhouse-EX.tsv.gz"),
        genexpr = os.path.join(PREP_DIR,"genexpr_tpm","inhouse.tsv.gz"),
        coefs_dir = os.path.join(TS_DIR,"data","fitted","splicing_dependency")
    output:
        directory(os.path.join(RESULTS_DIR,'files','splicing_dependency-{event_type}'))
    threads: 8
    resources:
        runtime = 86400, # seconds = 24h = 1 day
        memory = 30
    params:
        script_dir = TS_DIR
    shell:
        """
        nice python {params.script_dir}/target_spotter spldep_predict \
                    --splicing_file={input.psi} \
                    --genexpr_file={input.genexpr} \
                    --coefs_splicing_file={input.coefs_dir}/coefs_splicing.pickle.gz \
                    --coefs_genexpr_file={input.coefs_dir}/coefs_genexpr.pickle.gz \
                    --coefs_intercept_file={input.coefs_dir}/coefs_intercept.pickle.gz \
                    --output_dir={output} \
                    --n_jobs={threads} \
                    --log_transform
        """
        
        
rule figures_selection_exons_to_validate:
    input:
        annotation = os.path.join(RAW_DIR,'VastDB','event_annotation-Hs2.tsv.gz'),
        event_info = os.path.join(RAW_DIR,'VastDB','EVENT_INFO-hg38_noseqs.tsv'),
        protein_impact = os.path.join(ROOT,"data","raw","VastDB","PROT_IMPACT-hg38-v3.tab.gz"),
        ccle_spldep = os.path.join(CCLE_DIR,'files','splicing_dependency-EX','mean.tsv.gz'),
        ccle_genexpr = os.path.join(PREP_DIR,"genexpr_tpm","CCLE.tsv.gz"),
        ccle_splicing = os.path.join(PREP_DIR,"event_psi","CCLE-EX.tsv.gz"),
        ccle_stats = os.path.join(PREP_DIR,"stats","CCLE.tsv.gz"),
        ccle_metadata = os.path.join(PREP_DIR,"metadata","CCLE.tsv.gz"),
        selected_events = os.path.join(CCLE_DIR,'files','selected_models-EX.txt'),
        diff_result_sample = os.path.join(TCGA_DIR,'files','PANCAN','mannwhitneyu-PrimaryTumor_vs_SolidTissueNormal-EX.tsv.gz'),
        spldep_stats = os.path.join(TCGA_DIR,'files','PANCAN','summary_splicing_dependency-EX.tsv.gz'),
        diff_result_subtypes = os.path.join(TCGA_DIR,'files','PANCAN_subtypes','mannwhitneyu-PrimaryTumor_vs_SolidTissueNormal-EX.tsv.gz'),
        spldep_stats_subtypes = os.path.join(TCGA_DIR,'files','PANCAN_subtypes','summary_splicing_dependency-EX.tsv.gz'),
        available_cells = os.path.join(SUPPORT_DIR,"available_cancer_cells.tsv"),
        inhouse_splicing = os.path.join(PREP_DIR,"event_psi","inhouse-EX.tsv.gz"),
        inhouse_genexpr = os.path.join(PREP_DIR,"genexpr_tpm","inhouse.tsv.gz"),
        inhouse_spldep = os.path.join(RESULTS_DIR,"files","splicing_dependency-EX")
    output:
        directory(os.path.join(RESULTS_DIR,'figures','selection_exons_to_validate'))
    shell:
        """
        Rscript scripts/figures_selection_exons_to_validate.R \
                    --annotation_file={input.annotation} \
                    --event_info_file={input.event_info} \
                    --protein_impact_file={input.protein_impact} \
                    --ccle_spldep_file={input.ccle_spldep} \
                    --ccle_genexpr_file={input.ccle_genexpr} \
                    --ccle_splicing_file={input.ccle_splicing} \
                    --ccle_stats_file={input.ccle_stats} \
                    --ccle_metadata_file={input.ccle_metadata} \
                    --selected_events_file={input.selected_events} \
                    --diff_result_sample_file={input.diff_result_sample} \
                    --spldep_stats_file={input.spldep_stats} \
                    --diff_result_subtypes_file={input.diff_result_subtypes} \
                    --spldep_stats_subtypes_file={input.spldep_stats_subtypes} \
                    --available_cells_file={input.available_cells} \
                    --inhouse_splicing_file={input.inhouse_splicing} \
                    --inhouse_genexpr_file={input.inhouse_genexpr} \
                    --inhouse_spldep_file={input.inhouse_spldep}/mean.tsv.gz \
                    --figs_dir={output}
        """
        
rule figures_validation:
    input:
        annotation = os.path.join(RAW_DIR,'VastDB','event_annotation-Hs2.tsv.gz'),
        event_info = os.path.join(RAW_DIR,'VastDB','EVENT_INFO-hg38_noseqs.tsv'),
        splicing = os.path.join(PREP_DIR,"genexpr_tpm","inhouse.tsv.gz"),
        genexpr = os.path.join(PREP_DIR,"genexpr_tpm","CCLE.tsv.gz"),
        spldep = os.path.join(RESULTS_DIR,"files","splicing_dependency-EX"),
        validation_splicing = os.path.join(RAW_DIR,"experiments","validation_therapeutic_potential","20230215-psi-aso.tsv"),
        validation_od = os.path.join(RAW_DIR,"experiments","validation_therapeutic_potential","clonogenic_assay-od-merged.tsv"),
        prolif = os.path.join(RAW_DIR,"experiments","validation_therapeutic_potential","resazurin_cell_proliferation-merged.tsv")
    output:
        directory(os.path.join(RESULTS_DIR,'figures','validation'))
    shell:
        """
        Rscript scripts/figures_validation.R \
                    --annotation_file={input.annotation} \
                    --event_info_file={input.event_info} \
                    --validation_splicing_file={input.validation_splicing} \
                    --splicing_file={input.splicing} \
                    --genexpr_file={input.genexpr} \
                    --spldep_file={input.spldep}/mean.tsv.gz \
                    --validation_splicing_file={input.validation_splicing} \
                    --validation_od_file={input.validation_od} \
                    --prolif_file={input.prolif} \
                    --figs_dir={output}
        """
