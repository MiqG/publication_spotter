"""
Author: Miquel Anglada Girotto
Contact: miquelangladagirotto [at] gmail [dot] com
Last Update: 2021-01-12

Workflow purpose
--------------
Workflow to analyze putative associations between exons and cancer at single-exon level.


Outline
-------
        
"""

import os

# variables
ROOT = os.path.dirname(os.path.dirname(os.getcwd()))
RAW_DIR = os.path.join(ROOT,'data','raw')
PREP_DIR = os.path.join(ROOT,'data','prep')
RESULTS_DIR = os.path.join(ROOT,'results','model_splicing_dependency')
SRC_DIR = os.path.join(ROOT,'src')
SUPPORT_DIR = os.path.join(ROOT,'support')

EVENT_TYPES = ['EX','ALTA','ALTD']
CANCER_TYPES = [
    'BRCA',
    'COAD',
    'GBM',
    'HNSC',
    'KICH',
    'KIRC',
    'KIRP',
    'LGG',
    'LIHC',
    'LUAD',
    'LUSC',
    'PRAD',
    'READ',
    'THCA',
    'UCEC',
    'UCS'
]


##### RULES #####
rule all:
    input:
        # fit gene dependencies
        expand(os.path.join(RESULTS_DIR,'files','models_gene_dependency-{event_type}.tsv.gz'), event_type=EVENT_TYPES),
        
        # sample coefficients of splicing dependencies
        expand(os.path.join(RESULTS_DIR,'files','splicing_dependency_coefs-{event_type}'), event_type=EVENT_TYPES),
        
        # compute splicing dependencies
        #expand(os.path.join(RESULTS_DIR,'files','splicing_dependency_mean-{event_type}.tsv.gz'), event_type=EVENT_TYPES),
        #expand(os.path.join(RESULTS_DIR,'files','splicing_dependency_std-{event_type}.tsv.gz'), event_type=EVENT_TYPES),
        
        # impute splicing dependencies
        # expand(os.path.join(RESULTS_DIR,'files','imputed_splicing_dependency_mean-{event_type}.tsv.gz'), event_type=EVENT_TYPES),
        
        # embed splicing dependencies
        # expand(os.path.join(RESULTS_DIR,'files','embedded_splicing_dependency_mean-{event_type}.tsv.gz'), event_type=EVENT_TYPES),
        
        # EDA models of splicing dependencies
        #os.path.join(RESULTS_DIR,'figures','eda_models'),
        
        # EDA relationship between interaction terms in linear models and NMD
        #os.path.join(RESULTS_DIR,'figures','interaction_analysis')
        
        # validation splicing dependencies
        
        # compute splicing dependencies TCGA
        expand(os.path.join(RESULTS_DIR,'files','TCGA','{cancer}-splicing_dependency_mean-{event_type}.tsv.gz'), event_type=['EX'], cancer=CANCER_TYPES)
        
        
rule model_gene_dependency:
    input:
        psi_file = os.path.join(PREP_DIR,'event_psi','CCLE-{event_type}.tsv.gz'),
        genexpr_file = os.path.join(PREP_DIR,'genexpr_tpm','CCLE.tsv.gz'),
        rnai_file = os.path.join(PREP_DIR,'demeter2','CCLE.tsv.gz'),
        annotation_file = os.path.join(RAW_DIR,'VastDB','event_annotation-Hs2.tsv.gz')
    output:
        os.path.join(RESULTS_DIR,'files','models_gene_dependency-{event_type}.tsv.gz')
    threads: 15
    shell:
        """
        python scripts/model_gene_dependency.py \
                    --psi_file={input.psi_file} \
                    --genexpr_file={input.genexpr_file} \
                    --annotation_file={input.annotation_file} \
                    --rnai_file={input.rnai_file} \
                    --output_file={output} \
                    --n_jobs={threads}
        """
        
        
rule sample_splicing_dependency_coefs:
    input:
        os.path.join(RESULTS_DIR,'files','models_gene_dependency-{event_type}.tsv.gz')
    output:
        directory(os.path.join(RESULTS_DIR,'files','splicing_dependency_coefs-{event_type}'))
    threads: 15
    params:
        seed = 1234,
        size = 1000
    shell:
        """
        python scripts/sample_splicing_dependency_coefs.py \
                    --models_file={input} \
                    --output_dir={output} \
                    --size={params.size} \
                    --random_seed={params.seed} \
                    --n_jobs={threads}
        """
        

rule compute_splicing_dependency:
    input:
        psi = os.path.join(PREP_DIR,'event_psi','CCLE-{event_type}.tsv.gz'),
        genexpr = os.path.join(PREP_DIR,'genexpr_tpm','CCLE.tsv.gz'),
        models_coefs = os.path.join(RESULTS_DIR,'files','splicing_dependency_coefs-{event_type}')
    output:
        spldep_mean = os.path.join(RESULTS_DIR,'files','splicing_dependency_mean-{event_type}.tsv.gz'),
        spldep_std = os.path.join(RESULTS_DIR,'files','splicing_dependency_std-{event_type}.tsv.gz')
    shell:
        """
        python scripts/compute_splicing_dependency.py \
                    --psi_file={input.psi} \
                    --genexpr_file={input.genexpr} \
                    --models_coefs_dir={input.models_coefs} \
                    --spldep_mean_file={output.spldep_mean} \
                    --spldep_std_file={output.spldep_std}
        """
    
    
rule impute_splicing_dependency:
    input:
        os.path.join(RESULTS_DIR,'files','splicing_dependency_mean-{event_type}.tsv.gz')
    output:
        os.path.join(RESULTS_DIR,'files','imputed_splicing_dependency_mean-{event_type}.tsv.gz')
    params:
        script_dir=os.path.join(SRC_DIR,'python'),
        method = 'knn',
        method_kws = '\'{"n_neighbors":5}\'',
        features_as_rows = True
    shell:
        """
        python {params.script_dir}/impute_nan.py \
                    --input_file={input} \
                    --output_file={output} \
                    --method={params.method} \
                    --method_kws={params.method_kws} \
                    --features_as_rows={params.features_as_rows}
        """

        
rule embed_matrices:
    input:
        os.path.join(RESULTS_DIR,'files','imputed_splicing_dependency_mean-{event_type}.tsv.gz')
    output:
        os.path.join(RESULTS_DIR,'files','embedded_splicing_dependency_mean-{event_type}.tsv.gz')
    params:
        script_dir=os.path.join(SRC_DIR,'python')
    shell:
        """
        python {params.script_dir}/embed_and_cluster.py \
                    --matrix_file={input} \
                    --output_file={output} 
        """
        
        
rule figures_eda_models:
    input:
        psi = os.path.join(PREP_DIR,'event_psi','CCLE-EX.tsv.gz'),
        genexpr = os.path.join(PREP_DIR,'genexpr_tpm','CCLE.tsv.gz'),
        models = os.path.join(RESULTS_DIR,'files','models_gene_dependency-EX.tsv.gz'),
        rnai = os.path.join(PREP_DIR,'demeter2','CCLE.tsv.gz'),
        embedded_dependency = os.path.join(RESULTS_DIR,'files','embedded_splicing_dependency_mean-EX.tsv.gz'),
        metadata = os.path.join(PREP_DIR,'metadata','CCLE.tsv'),
        indices = os.path.join(PREP_DIR,'transcriptome_indices','CCLE.tsv.gz'),
        genes_splicing_factors = os.path.join(SUPPORT_DIR,'splicing_factors-symbols.txt')
    output:
        directory(os.path.join(RESULTS_DIR,'figures','eda_models'))
    shell:
        """
        Rscript scripts/figures_eda_models.R \
                    --psi_file={input.psi} \
                    --genexpr_file={input.genexpr} \
                    --rnai_file={input.rnai} \
                    --models_file={input.models} \
                    --embedded_dependency_file={input.embedded_dependency} \
                    --metadata_file={input.metadata} \
                    --indices_file={input.indices} \
                    --genes_splicing_factors_file={input.genes_splicing_factors} \
                    --figs_dir={output}
        """
    
    
rule figures_interaction_analysis:
    input:
        models = os.path.join(RESULTS_DIR,'files','models_gene_dependency-EX.tsv.gz'),
        possible_interactions = os.path.join(SUPPORT_DIR,'possible_pairwise_interaction_categories.tsv')
    output:
        directory(os.path.join(RESULTS_DIR,'figures','interaction_analysis'))
    shell:
        """
        Rscript scripts/figures_interaction_analysis.R \
                    --models_file={input.models} \
                    --possible_interactions_file={input.possible_interactions} \
                    --figs_dir={output}
        """
        
    
rule figures_validation:
    input:
        crispr_screen_file = os.path.join(PREP_DIR,'exon_psi','CCLE.tsv.gz'),
    output:
        directory(os.path.join(RESULTS_DIR,'figures','validation'))
    shell:
        """
        Rscript scripts/figures_validation.R
        """
    
    
rule compute_splicing_dependency_tcga:
    input:
        psi = os.path.join(PREP_DIR,'event_psi','{cancer}.tsv'),
        genexpr = os.path.join(PREP_DIR,'gene_counts','{cancer}.tsv'),
        models = os.path.join(RESULTS_DIR,'files','models_gene_dependency-{event_type}.tsv.gz'),
        models_coefs = os.path.join(RESULTS_DIR,'files','splicing_dependency_coefs-{event_type}'),
        gene_lengths = os.path.join(RAW_DIR,'VastDB','assemblies','Hs2','EXPRESSION','Hs2_mRNA-50-SS.eff')
    output:
        spldep_mean = os.path.join(RESULTS_DIR,'files','TCGA','{cancer}-splicing_dependency_mean-{event_type}.tsv.gz'),
        spldep_std = os.path.join(RESULTS_DIR,'files','TCGA','{cancer}-splicing_dependency_std-{event_type}.tsv.gz')
    threads: 15
    params:
        normalize_counts = True
    shell:
        """
        python scripts/compute_splicing_dependency.py \
                    --psi_file={input.psi} \
                    --genexpr_file={input.genexpr} \
                    --models_file={input.models} \
                    --models_coefs_dir={input.models_coefs} \
                    --normalize_counts={params.normalize_counts} \
                    --gene_lengths_file={input.gene_lengths} \
                    --spldep_mean_file={output.spldep_mean} \
                    --spldep_std_file={output.spldep_std} \
                    --n_jobs={threads}
        """