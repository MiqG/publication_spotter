"""
Author: Miquel Anglada Girotto
Contact: miquelangladagirotto [at] gmail [dot] com
Last Update: 2021-01-12

Workflow purpose
--------------
Workflow to analyze putative associations between exons and cancer at single-exon level.


Outline
-------
        
"""

import os

# variables
ROOT = os.path.dirname(os.path.dirname(os.getcwd()))
RAW_DIR = os.path.join(ROOT,'data','raw')
PREP_DIR = os.path.join(ROOT,'data','prep')
RESULTS_DIR = os.path.join(ROOT,'results','splicing_dependency_drugs')
MODELS_DIR = os.path.join(ROOT,'results','model_splicing_dependency')
SRC_DIR = os.path.join(ROOT,'src')
SUPPORT_DIR = os.path.join(ROOT,'support')
TS_DIR = os.path.join(os.path.dirname(os.path.dirname(ROOT)),'repositories','target_spotter')

EVENT_TYPES = ['EX'] #['EX','ALTA','ALTD']
DRUG_SCREENS = ['GDSC1','GDSC2']

##### RULES #####
rule all:
    input:
        # associations drug responses and splicing dependencies
        expand(os.path.join(RESULTS_DIR,'files','models_drug_response-{drug_screen}-{event_type}'), event_type=EVENT_TYPES, drug_screen=DRUG_SCREENS),
        expand(os.path.join(RESULTS_DIR,'files','estimated_drug_response-{drug_screen}-{event_type}'), event_type=EVENT_TYPES, drug_screen=DRUG_SCREENS),
        
        # concatenate model summaries
        expand(os.path.join(RESULTS_DIR,'files','model_summaries_drug_response-{event_type}.tsv.gz'), event_type=EVENT_TYPES),
        
        # embed association coefficients
        expand(os.path.join(RESULTS_DIR,'files','model_summaries_drug_response-{event_type}-coefs_mat.tsv.gz'), event_type=EVENT_TYPES),
        expand(os.path.join(RESULTS_DIR,'files','embedded_drug_associations-{event_type}.tsv.gz'), event_type=EVENT_TYPES),
        
        # plot models
        os.path.join(RESULTS_DIR,'figures','model_drug_screens')

    
rule model_drug_response:
    input:
        spldep = os.path.join(MODELS_DIR,'files','splicing_dependency-{event_type}','mean.tsv.gz'),
        drug_response = os.path.join(PREP_DIR,'drug_screens','{drug_screen}.tsv.gz'),
        selected_models = os.path.join(MODELS_DIR,'files','selected_models-{event_type}.txt'),
        mapping = os.path.join(RAW_DIR,'VastDB','event_annotation-Hs2.tsv.gz')
    output:
        directory(os.path.join(RESULTS_DIR,'files','models_drug_response-{drug_screen}-{event_type}'))
    threads: 15
    params:
        script_dir = TS_DIR
    shell:
        """
        python {params.script_dir}/target_spotter drugassoc_fit \
                    --drug_response_file={input.drug_response} \
                    --splicing_dependency_file={input.spldep} \
                    --mapping_file={input.mapping} \
                    --selected_models_file={input.selected_models} \
                    --output_dir={output} \
                    --n_jobs={threads}
        """
        

rule combine_model_summaries:
    input:
        [os.path.join(RESULTS_DIR,'files','models_drug_response-{drug_screen}-{event_type}').format(drug_screen=drug_screen, event_type='{event_type}') for drug_screen in DRUG_SCREENS]
    output:
        os.path.join(RESULTS_DIR,'files','model_summaries_drug_response-{event_type}.tsv.gz')
    run:
        import pandas as pd
        
        model_summaries = []
        for d in input:
            summary = pd.read_table(os.path.join(d,'model_summaries.tsv.gz'))
            model_summaries.append(summary)
        model_summaries = pd.concat(model_summaries)
        model_summaries.to_csv(output[0], sep='\t', index=False, compression='gzip')
        
        
rule pivot_drug_associations:
    input:  
        os.path.join(RESULTS_DIR,'files','model_summaries_drug_response-{event_type}.tsv.gz')
    output:
        os.path.join(RESULTS_DIR,'files','model_summaries_drug_response-{event_type}-coefs_mat.tsv.gz')
    run:
        import pandas as pd
        df = pd.read_table(input[0])
        df = df.pivot_table(values='spldep_coefficient', index='EVENT', columns='DRUG_ID')
        df = df.fillna(0)
        df.reset_index().to_csv(output[0], sep='\t', index=False, compression='gzip')
        

rule embed_drug_associations:
    input:
        os.path.join(RESULTS_DIR,'files','model_summaries_drug_response-{event_type}-coefs_mat.tsv.gz')
    output:
        os.path.join(RESULTS_DIR,'files','embedded_drug_associations-{event_type}.tsv.gz')
    params:
        script_dir=os.path.join(SRC_DIR,'python')
    shell:
        """
        python {params.script_dir}/embed_and_cluster.py \
                    --matrix_file={input} \
                    --output_file={output} 
        """

        
rule figures_model_drug_screens:
    input:
        models = os.path.join(RESULTS_DIR,'files','model_summaries_drug_response-EX.tsv.gz'),
        drug_targets = os.path.join(RAW_DIR,'GDSC','screened_compunds_rel_8.2.csv'),
        embedding = os.path.join(RESULTS_DIR,'files','embedded_drug_associations-EX.tsv.gz'),
        estimated_response = os.path.join(),
        drug_screen = os.path.join()
    output:
        directory(os.path.join(RESULTS_DIR,'figures','model_drug_screens'))
    shell:
        """
        Rscript scripts/figures_model_drug_screens.R \
                    --models_file={input.models} \
                    --drug_targets_file={input.drug_targets} \
                    --embedding_file={input.embedding} \
                    --estimated_response_file={input.estimated_response} \
                    --drug_screen_file={input.drug_screen} \
                    --figs_dir={output}
        """
        
        
rule predict_drug_response:
    input:
        spldep = os.path.join(MODELS_DIR,'files','splicing_dependency-{event_type}','mean.tsv.gz'),
        fitted_dir = os.path.join(RESULTS_DIR,'files','models_drug_response-{drug_screen}-{event_type}')
    output:
        directory(os.path.join(RESULTS_DIR,'files','estimated_drug_response-{drug_screen}-{event_type}'))
    params:
        script_dir = TS_DIR
    shell:
        """
        python {params.script_dir}/target_spotter drugassoc_predict \
                    --splicing_dependency_file={input.spldep} \
                    --model_summaries_file={input.fitted_dir}/model_summaries.tsv.gz \
                    --fitted_growth_rates_file={input.fitted_dir}/growth_rates.tsv.gz \
                    --fitted_spldep_file={input.fitted_dir}/fitted_splicing_dependency.tsv.gz \
                    --output_dir={output}
        """
        