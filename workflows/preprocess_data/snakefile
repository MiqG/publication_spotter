"""
Author: Miquel Anglada Girotto
Contact: miquelangladagirotto [at] gmail [dot] com
Last Update: 2021-01-12

Workflow purpose
--------------
Preprocess raw data.

Outline
-------

"""

import os

# variables
ROOT = os.path.dirname(os.path.dirname(os.getcwd()))
RAW_DIR = os.path.join(ROOT,'data','raw')
SRC_DIR = os.path.join(ROOT,'src')
PREP_DIR = os.path.join(ROOT,'data','prep')

EVENT_TYPES = ['EX','ALTA','ALTD']

DEPMAP_RAW = {
    'demeter2': os.path.join(RAW_DIR,'DepMap','demeter2','D2_combined_gene_dep_scores.csv'),
    #'genexpr_tpm': os.path.join(RAW_DIR,'DepMap','achilles_ccle','CCLE_expression_transposed.tsv.gz')
}

##### RULES #####
rule all:
    input:
        # preprocess CCLE
        ## metadata
        os.path.join(PREP_DIR,'metadata','CCLE.tsv.gz'),
        ## PSI
        expand(os.path.join(PREP_DIR,'event_psi','CCLE-{event_type}.tsv.gz'), event_type=EVENT_TYPES),
        ## gene expression
        os.path.join(PREP_DIR,'genexpr_tpm','CCLE.tsv.gz'),
        
        # preprocess DepMap data
        expand(os.path.join(PREP_DIR,'{dataset}','CCLE.tsv.gz'), dataset=['demeter2']),
        
        # impute CCLE PSI matrix
        expand(os.path.join(PREP_DIR,'event_psi_imputed','CCLE-{event_type}.tsv.gz'), event_type=EVENT_TYPES),
        
        # impute RNAi matrix
        os.path.join(PREP_DIR,'demeter2_imputed','CCLE.tsv.gz'),
        
        # compute transcriptome indices
        os.path.join(PREP_DIR,'transcriptome_indices','CCLE.tsv.gz'),
        
        # count mutation frequency
        os.path.join(PREP_DIR,'mutation_freq','CCLE.tsv.gz')
        

rule prepare_metadata_ccle:
    input:
        sample_info = os.path.join(RAW_DIR,'DepMap','achilles_ccle','sample_info.csv'),
        ccle_cancertypes = os.path.join(RAW_DIR,'articles','Yu2019','ccle_metadata.xls'),
        sample_annotation = os.path.join(RAW_DIR,'CCLE','ENA_filereport-PRJNA523380-CCLE.tsv')
    output:
        os.path.join(PREP_DIR,'metadata','CCLE.tsv.gz')
    params:
        dataset = 'metadata'
    shell:
        """
        python scripts/preprocess_ccle.py \
                    --dataset={params.dataset} \
                    --sample_info_file={input.sample_info} \
                    --ccle_cancer_types_file={input.ccle_cancertypes} \
                    --sample_annot_file={input.sample_annotation} \
                    --output_file={output}
        """


rule preprocess_psi_ccle:
    input:
        psi_file = os.path.join(RAW_DIR,'CCLE','vast_out','PSI-minN_1-minSD_0-noVLOW-min_ALT_use25-Tidy.tab.gz'),
        metadata_file = os.path.join(PREP_DIR,'metadata','CCLE.tsv.gz')
    output:
        os.path.join(PREP_DIR,'event_psi','CCLE-{event_type}.tsv.gz')
    params:
        dataset = 'event_psi',
        event_type = '{event_type}',
    shell:
        """
        python scripts/preprocess_ccle.py \
                    --dataset={params.dataset} \
                    --event_type={params.event_type} \
                    --mat_file={input.psi_file} \
                    --metadata_file={input.metadata_file} \
                    --output_file={output} \
        """
        

rule preprocess_tpm_ccle:
    input:
        tpm_file = os.path.join(RAW_DIR,'CCLE','vast_out','TPM-hg38-1019.tab.gz'),
        metadata_file = os.path.join(PREP_DIR,'metadata','CCLE.tsv.gz')
    output:
        os.path.join(PREP_DIR,'genexpr_tpm','CCLE.tsv.gz')
    params:
        dataset = 'genexpr_tpm'
    shell:
        """
        python scripts/preprocess_ccle.py \
                    --dataset={params.dataset} \
                    --mat_file={input.tpm_file} \
                    --metadata_file={input.metadata_file} \
                    --output_file={output} \
        """


rule preprocess_depmap:
    input:
        lambda wildcards: DEPMAP_RAW[wildcards.dataset]
    output:
        os.path.join(PREP_DIR,'{dataset}','CCLE.tsv.gz')
    params:
        metadata_file = os.path.join(RAW_DIR,'DepMap','achilles_ccle','sample_info.csv')
    shell:
        """
        python scripts/preprocess_achilles.py \
                    --raw_achilles_file={input} \
                    --raw_metadata_file={params.metadata_file} \
                    --prep_achilles_file={output}
        """

        
rule impute_psi_ccle:
    input:
        os.path.join(PREP_DIR,'event_psi','CCLE-{event_type}.tsv.gz')
    output:
        os.path.join(PREP_DIR,'event_psi_imputed','CCLE-{event_type}.tsv.gz')
    params:
        script_dir=os.path.join(SRC_DIR,'python'),
        method = 'knn',
        method_kws = '\'{"n_neighbors":5}\'',
        features_as_rows = True
    shell:
        """
        python {params.script_dir}/impute_nan.py \
                    --input_file={input} \
                    --output_file={output} \
                    --method={params.method} \
                    --method_kws={params.method_kws} \
                    --features_as_rows={params.features_as_rows}
        """
    

rule impute_rnai_ccle:
    input:
        os.path.join(PREP_DIR,'demeter2','CCLE.tsv.gz')
    output:
        os.path.join(PREP_DIR,'demeter2_imputed','CCLE.tsv.gz')
    params:
        script_dir=os.path.join(SRC_DIR,'python'),
        method = 'knn',
        method_kws = '\'{"n_neighbors":5}\'',
        features_as_rows = True
    shell:
        """
        python {params.script_dir}/impute_nan.py \
                    --input_file={input} \
                    --output_file={output} \
                    --method={params.method} \
                    --method_kws={params.method_kws} \
                    --features_as_rows={params.features_as_rows}
        """

        
rule compute_transcriptome_indices_ccle:
    input:
        os.path.join(PREP_DIR,'genexpr_tpm','CCLE.tsv.gz')
    output:
        os.path.join(PREP_DIR,'transcriptome_indices','CCLE.tsv.gz')
    shell:
        """
        python scripts/TranscriptomeIndices.py \
                        --genexpr_file={input} \
                        --output_file={output} \
        """
        
        
rule mutation_frequency:
    input:
        os.path.join(RAW_DIR,'DepMap','achilles_ccle','CCLE_mutations.csv')
    output:
        os.path.join(PREP_DIR,'mutation_freq','CCLE.tsv.gz')
    params:
        id_col = 'DepMap_ID',
        groupby_cols = 'Hugo_Symbol,Variant_Classification'
    shell:
        """
        python scripts/count_mutations_per_gene_and_variant.py \
                    --snv_file={input} \
                    --id_col={params.id_col} \
                    --groupby_cols={params.groupby_cols} \
                    --output_file={output}
        """