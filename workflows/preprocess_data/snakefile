"""
Author: Miquel Anglada Girotto
Contact: miquelangladagirotto [at] gmail [dot] com
Last Update: 2021-01-12

Workflow purpose
--------------
Preprocess raw data.

Outline
-------

"""

import os

# variables
ROOT = os.path.dirname(os.path.dirname(os.getcwd()))
RAW_DIR = os.path.join(ROOT,'data','raw')
PREP_DIR = os.path.join(ROOT,'data','prep')

EVENT_TYPES = ['EX','ALTA','ALTD']

DEPMAP_RAW = {
    'demeter2': os.path.join(RAW_DIR,'DepMap','demeter2','D2_combined_gene_dep_scores.csv'),
    'genexpr': os.path.join(RAW_DIR,'DepMap','achilles_ccle','CCLE_expression_transposed.tsv.gz')
}

##### RULES #####
rule all:
    input:
        # preprocess CCLE PSI matrix
        expand(os.path.join(PREP_DIR,'exon_psi','CCLE-{event_type}.tsv.gz'), event_type=EVENT_TYPES),
        
        # preprocess DepMap data
        expand(os.path.join(PREP_DIR,'{dataset}','CCLE.tsv.gz'), dataset=DEPMAP_RAW.keys()),
        
        # impute CCLE PSI matrix
        expand(os.path.join(PREP_DIR,'exon_psi_imputed','CCLE-{event_type}.tsv.gz'), event_type=EVENT_TYPES),
        
        # impute RNAi matrix
        os.path.join(PREP_DIR,'demeter2_imputed','CCLE.tsv.gz'),
        
        # compute transcriptome indicies
        os.path.join(PREP_DIR,'transcriptome_indices','CCLE.tsv.gz')
        
        
rule preprocess_ccle:
    input:
        psi_file = os.path.join(RAW_DIR,'inhouse','CCLE','CCLE_ALL_INCLUSION_LEVELS_FULL-Hs2935-minN_1-minSD_0-noVLOW-min_ALT_use25-Tidy.tab'),
        metadata_file = os.path.join(RAW_DIR,'DepMap','achilles_ccle','sample_info.csv'),
        ccle_cancertypes_file = os.path.join(RAW_DIR,'articles','Yu2019','ccle_metadata.xls')
    output:
        psi_file = os.path.join(PREP_DIR,'exon_psi','CCLE-{event_type}.tsv.gz')
    params:
        event_type = '{event_type}',
        metadata_file = os.path.join(PREP_DIR,'metadata','CCLE.tsv')
    shell:
        """
        python scripts/preprocess_ccle.py \
                    --raw_psi_file={input.psi_file} \
                    --raw_metadata_file={input.metadata_file} \
                    --ccle_cancertypes_file={input.ccle_cancertypes_file} \
                    --prep_psi_file={output.psi_file} \
                    --prep_metadata_file={params.metadata_file} \
                    --event_type={params.event_type}
        """

        
rule preprocess_depmap:
    input:
        lambda wildcards: DEPMAP_RAW[wildcards.dataset]
    output:
        os.path.join(PREP_DIR,'{dataset}','CCLE.tsv.gz')
    params:
        metadata_file = os.path.join(RAW_DIR,'DepMap','achilles_ccle','sample_info.csv')
    shell:
        """
        python scripts/preprocess_achilles.py \
                    --raw_achilles_file={input} \
                    --raw_metadata_file={params.metadata_file} \
                    --prep_achilles_file={output}
        """

        
rule impute_psi_ccle:
    input:
        os.path.join(PREP_DIR,'exon_psi','CCLE-{event_type}.tsv.gz')
    output:
        os.path.join(PREP_DIR,'exon_psi_imputed','CCLE-{event_type}.tsv.gz')
    params:
        method = 'knn',
        method_kws = '\'{"n_neighbors":5}\'',
        features_as_rows = True
    shell:
        """
        python scripts/impute_nan.py \
                    --input_file={input} \
                    --output_file={output} \
                    --method={params.method} \
                    --method_kws={params.method_kws} \
                    --features_as_rows={params.features_as_rows}
        """
    

rule impute_rnai_ccle:
    input:
        os.path.join(PREP_DIR,'demeter2','CCLE.tsv.gz')
    output:
        os.path.join(PREP_DIR,'demeter2_imputed','CCLE.tsv.gz')
    params:
        method = 'knn',
        method_kws = '\'{"n_neighbors":5}\'',
        features_as_rows = True
    shell:
        """
        python scripts/impute_nan.py \
                    --input_file={input} \
                    --output_file={output} \
                    --method={params.method} \
                    --method_kws={params.method_kws} \
                    --features_as_rows={params.features_as_rows}
        """

        
rule compute_transcriptome_indices_ccle:
    input:
        os.path.join(PREP_DIR,'genexpr','CCLE.tsv.gz')
    output:
        os.path.join(PREP_DIR,'transcriptome_indices','CCLE.tsv.gz')
    shell:
        """
        python scripts/TranscriptomeIndices.py \
                        --genexpr_file={input} \
                        --output_file={output} \
        """